# specify here default training configuration

# specify here default training configuration
defaults:
  - model: default_imagenet.yaml
  - trainer: default.yaml
  - datamodule: imagenet_datamodule.yaml
  - selection_method: reducible_loss_selection.yaml
  - callbacks: wandb.yaml # set this to null if you don't want to use callbacks
  - logger: wandb.yaml # set logger here or use command line (e.g. `python run.py logger=wandb`)
  # - experiment: null
  # - hparams_search: null
  - hydra: default.yaml
  - irreducible_loss_generator: imagenet_resnet50_pretrained.yaml
  # enable color logging
  - override hydra/hydra_logging: colorlog
  - override hydra/job_logging: colorlog
  - _self_

model:
  learning_rate: 0.0005
  percent_train: 0.2
  
trainer:
  gpus: 2
  min_epochs: 10
  max_epochs: 50
  progress_bar_refresh_rate: 20
  precision: 16
  accelerator: "ddp"

logger:
    wandb:
        entity: "goldiprox"
        project: "imagenet"
        
hydra:
  output_subdir: null # Disable saving of config files. We'll do that ourselves.
  run:
    dir: "outputs/imagenet/" # Set working dir to current directory

# path to original working directory
# hydra hijacks working directory by changing it to the current log directory,
# so it's useful to have this path as a special variable
# learn more here: https://hydra.cc/docs/next/tutorials/basic/running_your_app/working_directory
work_dir: ${hydra:runtime.cwd}

# use `python run.py debug=true` for easy debugging!
# this will run 1 train, val and test loop with only 1 batch
# equivalent to running `python run.py trainer.fast_dev_run=true`
# (this is placed here just for easier access from command line)
debug: False

# pretty print config at the start of the run using Rich library
print_config: True

# disable python warnings if they annoy you
ignore_warnings: True

# check performance on test set, using the best model achieved during training
# lightning chooses best model based on metric specified in checkpoint callback
test_after_training: True
